
Primary
-------
- Have the ability to crawl sub sections of a site only e.g. https://www.honda.co.uk/motorcycles.html as the base url and crawl any links containing this as a prefix. For example, https://www.honda.co.uk/cars.html would not be crawled but https://www.honda.co.uk/motorcycles/africa-twin.html would be.
- Create an executable based on the ./bin/console shipped as `wpry` or `wgit`.

Secondary
---------
- Think about how we handle invalid Url's/links found on crawled documents. Setup tests and implement logic for this scenario.
- Check if Document::TEXT_ELEMENTS is expansive enough.
- Add Database methods: #url(url) and #doc(doc#url) methods which pull the matching record from the DB, #delete(obj#url), #upsert(obj#url).

Refactoring
-----------
- Plan to open up the required_ruby_version range, say from 2.5 upwards e.g. `~> 2.5`. Will need CI testing for the different versions of ruby as we move onto support newer versions.
- Possibly use refine instead of core_ext?
- Think about potentially using DB.mutate's update_many func.

Gem Publishing Checklist
------------------------
- Ensure a clean branch of master and create a 'release' branch.
- Update standalone files (if necessary): README.md, TODO.txt, wgit.gemspec etc.
- Increment the version number (in version.rb) and update the CHANGELOG.md.
- Run 'bundle install' to update deps.
- Run 'bundle exec rake compile' and ensure acceptable warnings.
- Run 'bundle exec rake test' and ensure all tests are passing.
- Run `bundle exec rake install` to build and install the gem locally, then test it manually from outside this repo.
- Run `bundle exec yardoc` to update documentation - should be 100% coverage.
- Commit changes and merge branch into master. Delete release branch.
- Run `bundle exec rake RELEASE[origin]` to tag, build and push everything to github.com and rubygems.org.

